{
  "name": "@027 08.2 Sort Bubble Selection Insertion        #todo",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@027 08.2 Sort Bubble Selection Insertion #todo</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"sort-bubble-selection-insertion-todo\"><span class=\"citation\" data-cites=\"027\">@027</span> 08.2 Sort Bubble Selection Insertion #todo</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "\n"
    },
    {
      "name": "selection.c",
      "contents": "#include <stdio.h>\n//#include \"../libs/xpaint.h\"\n//#include \"../libs/xvet.h\"\n\n\n#define SUAPI(a, b, tipo)\\\ndo{\\\n    tipo SUAPI = a;\\\n    a = b;\\\n    b = SUAPI;\\\n}while(0)\n\n\n//encontra o menor [inicio, fim[\nint find_imenor(int vet[], int inicio, int fim){\n    int imenor = inicio;\n    for(int i = inicio + 1; i < fim; i++)\n        if(vet[i] < vet[imenor])\n            imenor = i;\n    return imenor;\n}\n\n/* int selection(int vet[], int size){\n    do{\n\n    }while(0)\n} */\n\nint main() {\n\n    int aux = 4;\n    int y = 7;\n    SUAPI(aux, y, int);\n    printf(\"%d %d\\n\", aux, y);\n\n    float f1 = 5.6;\n    float f2 = 4.5;\n    SUAPI(f1, f2, float);\n    printf(\"%f %f\\n\", f1, f2);\n\n    char * c1 = \"banana\";\n    char * c2 = \"maca\";\n    SUAPI(c1, c2, char *);\n    printf(\"%s %s\\n\", c1, c2);\n\n    return 0;\n}\n\n"
    },
    {
      "name": "insertion.c",
      "contents": "#include <stdio.h>\n#include \"../libs/xpaint.h\"\n#include \"../libs/xvet.h\"\n\nvoid insertion(int * vet, int size){\n    for(int i = 1; i < size; i++){\n        xs_partition(0, i);\n        xs_pivot(vet[i]);\n        xd_vet(vet, size, \"r\", i);\n        int j;\n        for(j = i; j > 0; j--){\n            if(vet[j] < vet[j - 1]){\n                X_SWAP(vet[j], vet[j - 1], int);\n                xd_vet(vet, size, \"y\", j - 1);\n            }else\n                break;\n        }\n        xd_vet(vet, size, \"g\", j);\n    }\n    xd_vet(vet, size, NULL);\n}\n\nvoid verify(int * vet, int size){\n    int i = 0;\n    for(i = 0;i < size - 1; i++){  \n        if(vet[i] <= vet[i + 1])\n            xd_vet(vet, size, \"gg\", i, i + 1);\n        else{\n            xd_vet(vet, size, \"rr\", i, i + 1);\n            break;\n        }\n    }\n}\n\nint main() {\n\n    x_open(600, 300);\n    xs_log(\"imgs/\");\n    srand(2); \n\n    int vet[30];\n    int size = sizeof(vet)/sizeof(int);\n    int i;\n    for(i = 0; i < size; i++)\n        vet[i] = rand() % 200 + 1; \n\n    insertion(vet, size);\n    verify(vet, size);\n    xs_jump(1); //interativo\n    xd_vet(vet, size, \"\");\n    x_close();\n\n    return 0;\n }\n\n"
    }
  ],
  "requiredFile": null
}