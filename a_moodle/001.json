{
  "name": "@001 01.2 Princesa V2                     #done",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@001 01.2 Princesa V2 #done</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"princesa-v2-done\"><span class=\"citation\" data-cites=\"001\">@001</span> 01.2 Princesa V2 #done</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<p><a href=\"https://www.youtube.com/watch?v=uCsD3ZGzMgE\"><img src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/001/__capa.jpg\" /></a></p>\n<p>Esse jogo \u00e9 equivalente ao V1 por\u00e9m com duas diferen\u00e7as. - N\u00fameros positivos e negativos se alternam. Se tivermos 5 participantes e o primeiro for negativo, ent\u00e3o nosso vetor ser\u00e1: - <code>[ -1 2 -3 4 -5 ]</code> - O valor de F, denominado fase, poder\u00e1 ter os valor 1 ou -1 e indica se o primeiro participante ser\u00e1 positivo ou negativo. - Se a espada estiver com um participante com n\u00famero negativo, ele dever\u00e1 matar o participantes \u00e0 sua esquerda. Se a espada estiver com um participante de n\u00famero positivo, dever\u00e1 matar o participante \u00e0 sua direita no vetor.</p>\n<ul>\n<li>Implemente esse problemas utilizando as seguintes abordagens:\n<ul>\n<li>utilizando um vetor\n<ul>\n<li>marcando os elementos que morrem.</li>\n<li>retirando os elementos que morrem e diminuindo o tamanho do vetor.</li>\n</ul></li>\n<li>utilizando um lista circular <strong>dupla</strong> sem n\u00f3s de marca\u00e7\u00e3o.</li>\n</ul></li>\n</ul>\n<p>Testes:</p>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\n3 1 1\n========\n[ 1&gt; -2 3 ]\n[ 1 3&gt; ]\n[ 3&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 02\n3 2 1\n========\n[ 1 &lt;-2 3 ]\n[ -2 3&gt; ]\n[ 3&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 03\n3 3 1\n========\n[ 1 -2 3&gt; ]\n[ &lt;-2 3 ]\n[ &lt;-2 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 04\n3 1 -1\n========\n[ &lt;-1 2 -3 ]\n[ -1 2&gt; ]\n[ 2&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 05\n3 2 -1\n========\n[ -1 2&gt; -3 ]\n[ &lt;-1 2 ]\n[ &lt;-1 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 06\n3 3 -1\n========\n[ -1 2 &lt;-3 ]\n[ &lt;-1 -3 ]\n[ &lt;-1 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 07\n4 1 1\n========\n[ 1&gt; -2 3 -4 ]\n[ 1 3&gt; -4 ]\n[ 1&gt; 3 ]\n[ 1&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 08\n4 2 1\n========\n[ 1 &lt;-2 3 -4 ]\n[ -2 3 &lt;-4 ]\n[ &lt;-2 -4 ]\n[ &lt;-2 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 09\n4 3 1\n========\n[ 1 -2 3&gt; -4 ]\n[ 1&gt; -2 3 ]\n[ 1 3&gt; ]\n[ 3&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 10\n4 4 1\n========\n[ 1 -2 3 &lt;-4 ]\n[ 1 &lt;-2 -4 ]\n[ -2 &lt;-4 ]\n[ &lt;-4 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 11\n6 3 -1\n========\n[ -1 2 &lt;-3 4 -5 6 ]\n[ &lt;-1 -3 4 -5 6 ]\n[ -1 -3 4 &lt;-5 ]\n[ -1 &lt;-3 -5 ]\n[ -3 &lt;-5 ]\n[ &lt;-5 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 12\n9 9 1\n========\n[ 1 -2 3 -4 5 -6 7 -8 9&gt; ]\n[ &lt;-2 3 -4 5 -6 7 -8 9 ]\n[ -2 3 -4 5 -6 7 &lt;-8 ]\n[ -2 3 -4 5 &lt;-6 -8 ]\n[ -2 3 &lt;-4 -6 -8 ]\n[ &lt;-2 -4 -6 -8 ]\n[ -2 -4 &lt;-6 ]\n[ &lt;-2 -6 ]\n[ &lt;-2 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 13\n20 1 1\n========\n[ 1&gt; -2 3 -4 5 -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3&gt; -4 5 -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5&gt; -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7&gt; -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9&gt; -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11&gt; -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13&gt; -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15&gt; -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15 17&gt; -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15 17 19&gt; -20 ]\n[ 1&gt; 3 5 7 9 11 13 15 17 19 ]\n[ 1 5&gt; 7 9 11 13 15 17 19 ]\n[ 1 5 9&gt; 11 13 15 17 19 ]\n[ 1 5 9 13&gt; 15 17 19 ]\n[ 1 5 9 13 17&gt; 19 ]\n[ 1&gt; 5 9 13 17 ]\n[ 1 9&gt; 13 17 ]\n[ 1 9 17&gt; ]\n[ 9&gt; 17 ]\n[ 9&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n\n</code></pre>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=01\ninput=3 1 1\noutput=\"[ 1> -2 3 ]\n[ 1 3> ]\n[ 3> ]\n\"\ngrade reduction=100%\n\n\ncase=02\ninput=3 2 1\noutput=\"[ 1 <-2 3 ]\n[ -2 3> ]\n[ 3> ]\n\"\ngrade reduction=100%\n\n\ncase=03\ninput=3 3 1\noutput=\"[ 1 -2 3> ]\n[ <-2 3 ]\n[ <-2 ]\n\"\ngrade reduction=100%\n\n\ncase=04\ninput=3 1 -1\noutput=\"[ <-1 2 -3 ]\n[ -1 2> ]\n[ 2> ]\n\"\ngrade reduction=100%\n\n\ncase=05\ninput=3 2 -1\noutput=\"[ -1 2> -3 ]\n[ <-1 2 ]\n[ <-1 ]\n\"\ngrade reduction=100%\n\n\ncase=06\ninput=3 3 -1\noutput=\"[ -1 2 <-3 ]\n[ <-1 -3 ]\n[ <-1 ]\n\"\ngrade reduction=100%\n\n\ncase=07\ninput=4 1 1\noutput=\"[ 1> -2 3 -4 ]\n[ 1 3> -4 ]\n[ 1> 3 ]\n[ 1> ]\n\"\ngrade reduction=100%\n\n\ncase=08\ninput=4 2 1\noutput=\"[ 1 <-2 3 -4 ]\n[ -2 3 <-4 ]\n[ <-2 -4 ]\n[ <-2 ]\n\"\ngrade reduction=100%\n\n\ncase=09\ninput=4 3 1\noutput=\"[ 1 -2 3> -4 ]\n[ 1> -2 3 ]\n[ 1 3> ]\n[ 3> ]\n\"\ngrade reduction=100%\n\n\ncase=10\ninput=4 4 1\noutput=\"[ 1 -2 3 <-4 ]\n[ 1 <-2 -4 ]\n[ -2 <-4 ]\n[ <-4 ]\n\"\ngrade reduction=100%\n\n\ncase=11\ninput=6 3 -1\noutput=\"[ -1 2 <-3 4 -5 6 ]\n[ <-1 -3 4 -5 6 ]\n[ -1 -3 4 <-5 ]\n[ -1 <-3 -5 ]\n[ -3 <-5 ]\n[ <-5 ]\n\"\ngrade reduction=100%\n\n\ncase=12\ninput=9 9 1\noutput=\"[ 1 -2 3 -4 5 -6 7 -8 9> ]\n[ <-2 3 -4 5 -6 7 -8 9 ]\n[ -2 3 -4 5 -6 7 <-8 ]\n[ -2 3 -4 5 <-6 -8 ]\n[ -2 3 <-4 -6 -8 ]\n[ <-2 -4 -6 -8 ]\n[ -2 -4 <-6 ]\n[ <-2 -6 ]\n[ <-2 ]\n\"\ngrade reduction=100%\n\n\ncase=13\ninput=20 1 1\noutput=\"[ 1> -2 3 -4 5 -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3> -4 5 -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5> -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7> -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9> -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11> -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13> -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15> -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15 17> -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15 17 19> -20 ]\n[ 1> 3 5 7 9 11 13 15 17 19 ]\n[ 1 5> 7 9 11 13 15 17 19 ]\n[ 1 5 9> 11 13 15 17 19 ]\n[ 1 5 9 13> 15 17 19 ]\n[ 1 5 9 13 17> 19 ]\n[ 1> 5 9 13 17 ]\n[ 1 9> 13 17 ]\n[ 1 9 17> ]\n[ 9> 17 ]\n[ 9> ]\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.c.txt",
      "contents": "#include <stdio.h>\n#include <stdbool.h>\n\nconst int MORTO = 0;\n\nint walk(int pos, int size, int dir){\n    if(dir == 1)\n        return (pos + 1) % size;\n    return (pos + size - 1) % size;\n}\n\n//acha o proximo elemento vivo a partir de inicio + 1\n//dir \u00e9 1 ou -1\nint achar_vivo(int vet[], int size, int inicio, int dir){\n    int pos = walk(inicio, size, dir);\n    while(vet[pos] == MORTO)\n        pos = walk(pos, size, dir);\n    return pos;\n}\n\nvoid mostrar_vetor(int vet[], int size, int e){\n    printf(\"[\");\n    for(int i = 0; i < size; i++){\n        if(vet[i] != MORTO){\n            printf(\" \");\n            if((i == e) && (vet[i] < 0))\n                printf(\"<\");\n                printf(\"%d\", vet[i]);\n            if((i == e) && (vet[i] > 0))\n                printf(\">\");\n        }\n    }\n    printf(\" ]\\n\");\n}\n\nint main(){\n    int size = 0;\n    int esc = 0; //o escolhido\n    int fase = 0;\n    scanf(\"%d %d %d\", &size, &esc, &fase);\n    int vet[size];\n    for(int i = 0; i < size; i++){\n        vet[i] = (i + 1) * fase;\n        fase *= -1;\n    }\n    esc = esc - 1;\n    mostrar_vetor(vet, size, esc);\n    int qtd = size - 1;\n    while(qtd--){\n        int dir = vet[esc] > 0 ? 1 : -1;\n        int vai_morrer = achar_vivo(vet, size, esc, dir);\n        vet[vai_morrer] = 0;\n        esc = achar_vivo(vet, size, vai_morrer, dir);\n        mostrar_vetor(vet, size, esc);\n    }\n}\n\n"
    }
  ],
  "requiredFile": null
}