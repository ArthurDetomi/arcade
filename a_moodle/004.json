{
  "name": "@004 02.2 Rec Tri\u00e2ngulo da soma           #done",
  "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@004 02.2 Rec Tri\u00e2ngulo da soma #done</title>\n  <style>\n      code{white-space: pre-wrap;}\n      span.smallcaps{font-variant: small-caps;}\n      span.underline{text-decoration: underline;}\n      div.column{display: inline-block; vertical-align: top; width: 50%;}\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"rec-tri\u00e2ngulo-da-soma-done\"><span class=\"citation\" data-cites=\"004\">@004</span> 02.2 Rec Tri\u00e2ngulo da soma #done</h2>\n<h2 id=\"qxcode\"><span class=\"citation\" data-cites=\"qxcode\">@qxcode</span></h2>\n<p>Dado um vetor de inteiros A, imprima um tri\u00e2ngulo de n\u00fameros tal que na base do tri\u00e2ngulo estejam todos os elementos do vetor original, e tal que, a cada i-\u00e9simo n\u00edvel acima da base, o n\u00famero de elementos seja um a menos que no n\u00edvel inferior e cada elemento do i-\u00e9simo n\u00edvel seja a soma de dois elementos consecutivos do n\u00edvel inferior.</p>\n<ul>\n<li>Entrada\n<ul>\n<li>Os elementos da base</li>\n</ul></li>\n<li>Sa\u00edda\n<ul>\n<li>O tri\u00e2ngulo</li>\n</ul></li>\n</ul>\n<h2 id=\"testes\">Testes</h2>\n<pre><code>\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\n1 2 3\n========\n[ 8 ]\n[ 3 5 ]\n[ 1 2 3 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 02\n3 2 1\n========\n[ 8 ]\n[ 5 3 ]\n[ 3 2 1 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 03\n4 3 2 1\n========\n[ 20 ]\n[ 12 8 ]\n[ 7 5 3 ]\n[ 4 3 2 1 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 04\n1 1 2 3 5 8\n========\n[ 89 ]\n[ 34 55 ]\n[ 13 21 34 ]\n[ 5 8 13 21 ]\n[ 2 3 5 8 13 ]\n[ 1 1 2 3 5 8 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 05\n1 2 4 8 16 32 64\n========\n[ 729 ]\n[ 243 486 ]\n[ 81 162 324 ]\n[ 27 54 108 216 ]\n[ 9 18 36 72 144 ]\n[ 3 6 12 24 48 96 ]\n[ 1 2 4 8 16 32 64 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n</code></pre>\n</body>\n</html>\n",
  "executionFiles": [
    {
      "name": "vpl_evaluate.cases",
      "contents": "case=01\ninput=1 2 3\noutput=\"[ 8 ]\n[ 3 5 ]\n[ 1 2 3 ]\n\"\ngrade reduction=100%\n\n\ncase=02\ninput=3 2 1\noutput=\"[ 8 ]\n[ 5 3 ]\n[ 3 2 1 ]\n\"\ngrade reduction=100%\n\n\ncase=03\ninput=4 3 2 1\noutput=\"[ 20 ]\n[ 12 8 ]\n[ 7 5 3 ]\n[ 4 3 2 1 ]\n\"\ngrade reduction=100%\n\n\ncase=04\ninput=1 1 2 3 5 8\noutput=\"[ 89 ]\n[ 34 55 ]\n[ 13 21 34 ]\n[ 5 8 13 21 ]\n[ 2 3 5 8 13 ]\n[ 1 1 2 3 5 8 ]\n\"\ngrade reduction=100%\n\n\ncase=05\ninput=1 2 4 8 16 32 64\noutput=\"[ 729 ]\n[ 243 486 ]\n[ 81 162 324 ]\n[ 27 54 108 216 ]\n[ 9 18 36 72 144 ]\n[ 3 6 12 24 48 96 ]\n[ 1 2 4 8 16 32 64 ]\n\"\ngrade reduction=100%\n"
    },
    {
      "name": "solver.cpp.txt",
      "contents": "#include <iostream>\n#include <vector>\n#include <sstream>\nusing namespace std;\n\n\nvoid print(vector<int> vet){\n    cout << \"[\";\n    for(auto x : vet)\n        cout << \" \" << x;\n    cout << \" ]\\n\";\n}\n\nvoid processa(vector<int> vet){\n    if(vet.size() == 1)\n        return;\n    vector<int> aux;\n    for(size_t i = 0; i < vet.size() - 1; i++)\n        aux.push_back(vet[i] + vet[i + 1]);\n    processa(aux);\n    print(aux);\n}\n\nint main(){\n    string line;\n    getline(cin, line);\n    stringstream ss(line);\n    vector<int> vet;\n    int value;\n    while(ss >> value)\n        vet.push_back(value);\n    processa(vet);\n    print(vet);\n}"
    }
  ],
  "requiredFile": null
}