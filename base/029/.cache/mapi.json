{
    "title": "@029 L2 - {human} matrix",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@029 L2 - {human} matrix</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    span.underline{text-decoration: underline;}\n    div.column{display: inline-block; vertical-align: top; width: 50%;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    ul.task-list{list-style: none;}\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <link rel=\"stylesheet\" href=\"/tmp/tmppb5wnzta.css\" />\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"l2---human-matrix\"><span class=\"citation\"\ndata-cites=\"029\">@029</span> L2 - {human} matrix</h2>\n<p><img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/029/cover.jpg\" /></p>\n<p>O c++ padr\u00e3o n\u00e3o tem uma classe Matriz. Mas n\u00f3s podemos criar a\nnossa. Ela ser\u00e1 muito \u00fatil para alguns exerc\u00edcios desse reposit\u00f3rio.</p>\n<p>Voc\u00ea pode usar o modelo a seguir. Vai precisar estudar sobre: -\nsobrecarga de m\u00e9todos ==, !=, &lt;&lt; e []. - classes com template. -\nespecializa\u00e7\u00e3o de template.</p>\n<p>As sobrecargas do <code>ostream</code> j\u00e1 est\u00e3o implementados. Os\nm\u00e9todos de classe demarcados por { \u2026 } ainda n\u00e3o. Comente tudo e v\u00e1\ndescomentando e implementando aos pouquinhos. Teste seu c\u00f3digo a cada\nm\u00e9todo para ter certeza de que ele faz o que deve fazer.</p>\n<p>Arquivos - <a\nhref=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/029/mat.h\">biblioteca</a>\n- <a\nhref=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/029/main.cpp\">main</a></p>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode txt\"><code class=\"sourceCode default\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>testes na main</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>========</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>@case matriz de inteiros: 1 </span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>@case matriz de char: 1 </span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>@case inicializa\u00e7\u00e3o: </span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>@case acesso: 1 </span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>@case check: 1 1 1 </span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>acertos: 6/6</span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span></code></pre></div>\n<!--ADD mat.h cpp-->\n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode cpp\"><code class=\"sourceCode cpp\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"pp\">#include </span><span class=\"im\">&lt;iostream&gt;</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"pp\">#include </span><span class=\"im\">&lt;sstream&gt;</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"pp\">#include </span><span class=\"im\">&lt;vector&gt;</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//!+1</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">struct</span> Pos <span class=\"op\">{</span></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">int</span> l<span class=\"op\">,</span> c<span class=\"op\">;</span></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    Pos<span class=\"op\">(</span><span class=\"dt\">int</span> l<span class=\"op\">,</span> <span class=\"dt\">int</span> c<span class=\"op\">)</span> <span class=\"op\">:</span> </span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>        l<span class=\"op\">(</span>l<span class=\"op\">),</span> c<span class=\"op\">(</span>c<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">bool</span> <span class=\"kw\">operator</span><span class=\"op\">==(</span>Pos pos<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> pos<span class=\"op\">.</span>l <span class=\"op\">==</span> l <span class=\"op\">&amp;&amp;</span> pos<span class=\"op\">.</span>c <span class=\"op\">==</span> c<span class=\"op\">;</span></span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">bool</span> <span class=\"kw\">operator</span><span class=\"op\">!=(</span>Pos pos<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"op\">!(*</span><span class=\"kw\">this</span> <span class=\"op\">==</span> pos<span class=\"op\">);</span></span>\n<span id=\"cb2-15\"><a href=\"#cb2-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-16\"><a href=\"#cb2-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">std::</span>string<span class=\"op\"> </span>str<span class=\"op\">()</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-17\"><a href=\"#cb2-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">std::</span>stringstream<span class=\"op\"> </span>ss<span class=\"op\">;</span></span>\n<span id=\"cb2-18\"><a href=\"#cb2-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>        ss <span class=\"op\">&lt;&lt;</span> <span class=\"st\">&quot;{&quot;</span> <span class=\"op\">&lt;&lt;</span> l <span class=\"op\">&lt;&lt;</span> <span class=\"st\">&quot;,&quot;</span> <span class=\"op\">&lt;&lt;</span> c <span class=\"op\">&lt;&lt;</span> <span class=\"st\">&quot;}&quot;</span><span class=\"op\">;</span></span>\n<span id=\"cb2-19\"><a href=\"#cb2-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> ss<span class=\"op\">.</span>str<span class=\"op\">();</span></span>\n<span id=\"cb2-20\"><a href=\"#cb2-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-21\"><a href=\"#cb2-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb2-22\"><a href=\"#cb2-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//!=</span></span>\n<span id=\"cb2-23\"><a href=\"#cb2-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//consigo imprimir a matriz diretamente atrav\u00e9s do m\u00e9todo str</span></span>\n<span id=\"cb2-24\"><a href=\"#cb2-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">std::</span>ostream<span class=\"op\"> &amp;</span><span class=\"kw\">operator</span><span class=\"op\">&lt;&lt;(</span><span class=\"bu\">std::</span>ostream<span class=\"op\"> &amp;</span>os<span class=\"op\">,</span> Pos pos<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-25\"><a href=\"#cb2-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> os <span class=\"op\">&lt;&lt;</span> pos<span class=\"op\">.</span>str<span class=\"op\">();</span></span>\n<span id=\"cb2-26\"><a href=\"#cb2-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb2-27\"><a href=\"#cb2-27\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-28\"><a href=\"#cb2-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//!+1</span></span>\n<span id=\"cb2-29\"><a href=\"#cb2-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">template</span> <span class=\"op\">&lt;</span><span class=\"kw\">class</span> T<span class=\"op\">&gt;</span></span>\n<span id=\"cb2-30\"><a href=\"#cb2-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">class</span> matrix <span class=\"op\">{</span></span>\n<span id=\"cb2-31\"><a href=\"#cb2-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">int</span> nl<span class=\"op\">{</span><span class=\"dv\">0</span><span class=\"op\">},</span> nc<span class=\"op\">{</span><span class=\"dv\">0</span><span class=\"op\">};</span></span>\n<span id=\"cb2-32\"><a href=\"#cb2-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">std::</span>vector<span class=\"op\">&lt;</span><span class=\"bu\">std::</span>vector<span class=\"op\">&lt;</span>T<span class=\"op\">&gt;&gt;</span> data<span class=\"op\">;</span></span>\n<span id=\"cb2-33\"><a href=\"#cb2-33\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-34\"><a href=\"#cb2-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">public</span><span class=\"op\">:</span></span>\n<span id=\"cb2-35\"><a href=\"#cb2-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// construtor com todos os valores default nulos</span></span>\n<span id=\"cb2-36\"><a href=\"#cb2-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>    matrix<span class=\"op\">(</span><span class=\"dt\">int</span> nl<span class=\"op\">,</span> <span class=\"dt\">int</span> nc<span class=\"op\">)</span> <span class=\"op\">:</span> </span>\n<span id=\"cb2-37\"><a href=\"#cb2-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>        nl<span class=\"op\">(</span>nl<span class=\"op\">),</span> nc<span class=\"op\">(</span>nc<span class=\"op\">),</span> data<span class=\"op\">(</span>nl<span class=\"op\">,</span> <span class=\"bu\">std::</span>vector<span class=\"op\">&lt;</span>T<span class=\"op\">&gt;(</span>nc<span class=\"op\">))</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-38\"><a href=\"#cb2-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-39\"><a href=\"#cb2-39\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-40\"><a href=\"#cb2-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// construtor passando o valor default de cada elemento</span></span>\n<span id=\"cb2-41\"><a href=\"#cb2-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>    matrix<span class=\"op\">(</span><span class=\"dt\">int</span> nl<span class=\"op\">,</span> <span class=\"dt\">int</span> nc<span class=\"op\">,</span> T def<span class=\"op\">)</span> <span class=\"op\">:</span> </span>\n<span id=\"cb2-42\"><a href=\"#cb2-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>        nl<span class=\"op\">(</span>nl<span class=\"op\">),</span> nc<span class=\"op\">(</span>nc<span class=\"op\">),</span> data<span class=\"op\">(</span>nl<span class=\"op\">,</span> <span class=\"bu\">std::</span>vector<span class=\"op\">&lt;</span>T<span class=\"op\">&gt;(</span>nc<span class=\"op\">,</span> def<span class=\"op\">))</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-43\"><a href=\"#cb2-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-44\"><a href=\"#cb2-44\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-45\"><a href=\"#cb2-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>    matrix<span class=\"op\">(</span><span class=\"bu\">std::</span>vector<span class=\"op\">&lt;</span><span class=\"bu\">std::</span>vector<span class=\"op\">&lt;</span>T<span class=\"op\">&gt;&gt;</span> init<span class=\"op\">)</span> <span class=\"op\">:</span> </span>\n<span id=\"cb2-46\"><a href=\"#cb2-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>        data<span class=\"op\">(</span>init<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-47\"><a href=\"#cb2-47\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-48\"><a href=\"#cb2-48\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//!=</span></span>\n<span id=\"cb2-49\"><a href=\"#cb2-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">//return number of lines</span></span>\n<span id=\"cb2-50\"><a href=\"#cb2-50\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">int</span> lines<span class=\"op\">()</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-51\"><a href=\"#cb2-51\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> nl<span class=\"op\">;</span></span>\n<span id=\"cb2-52\"><a href=\"#cb2-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-53\"><a href=\"#cb2-53\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-54\"><a href=\"#cb2-54\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">//return number of columns</span></span>\n<span id=\"cb2-55\"><a href=\"#cb2-55\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">int</span> cols<span class=\"op\">()</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-56\"><a href=\"#cb2-56\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> nc<span class=\"op\">;</span></span>\n<span id=\"cb2-57\"><a href=\"#cb2-57\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-58\"><a href=\"#cb2-58\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//!+1</span></span>\n<span id=\"cb2-59\"><a href=\"#cb2-59\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// retorna elemento se passar posic\u00e3o</span></span>\n<span id=\"cb2-60\"><a href=\"#cb2-60\" aria-hidden=\"true\" tabindex=\"-1\"></a>    T<span class=\"op\">&amp;</span> at<span class=\"op\">(</span>Pos pos<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-61\"><a href=\"#cb2-61\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> data<span class=\"op\">[</span>pos<span class=\"op\">.</span>l<span class=\"op\">][</span>pos<span class=\"op\">.</span>c<span class=\"op\">];</span></span>\n<span id=\"cb2-62\"><a href=\"#cb2-62\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-63\"><a href=\"#cb2-63\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-64\"><a href=\"#cb2-64\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// retorna elemento se passar posic\u00e3o</span></span>\n<span id=\"cb2-65\"><a href=\"#cb2-65\" aria-hidden=\"true\" tabindex=\"-1\"></a>    T<span class=\"op\">&amp;</span> <span class=\"kw\">operator</span><span class=\"op\">[](</span>Pos pos<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-66\"><a href=\"#cb2-66\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> at<span class=\"op\">(</span>pos<span class=\"op\">);</span></span>\n<span id=\"cb2-67\"><a href=\"#cb2-67\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-68\"><a href=\"#cb2-68\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-69\"><a href=\"#cb2-69\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// retorna linha</span></span>\n<span id=\"cb2-70\"><a href=\"#cb2-70\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">std::</span>vector<span class=\"op\">&lt;</span>T<span class=\"op\">&gt;</span> <span class=\"op\">&amp;</span><span class=\"kw\">operator</span><span class=\"op\">[](</span><span class=\"dt\">int</span> l<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-71\"><a href=\"#cb2-71\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> data<span class=\"op\">[</span>l<span class=\"op\">];</span></span>\n<span id=\"cb2-72\"><a href=\"#cb2-72\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-73\"><a href=\"#cb2-73\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-74\"><a href=\"#cb2-74\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// retorna se posi\u00e7\u00e3o est\u00e1 dentro da matrix</span></span>\n<span id=\"cb2-75\"><a href=\"#cb2-75\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">bool</span> inside<span class=\"op\">(</span>Pos pos<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-76\"><a href=\"#cb2-76\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"op\">!(</span>pos<span class=\"op\">.</span>l <span class=\"op\">&lt;</span> <span class=\"dv\">0</span> <span class=\"op\">||</span> pos<span class=\"op\">.</span>l <span class=\"op\">&gt;=</span> nl <span class=\"op\">||</span> pos<span class=\"op\">.</span>c <span class=\"op\">&lt;</span> <span class=\"dv\">0</span> <span class=\"op\">||</span> pos<span class=\"op\">.</span>c <span class=\"op\">&gt;=</span> nc<span class=\"op\">);</span></span>\n<span id=\"cb2-77\"><a href=\"#cb2-77\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-78\"><a href=\"#cb2-78\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-79\"><a href=\"#cb2-79\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">// retorna se essa posi\u00e7\u00e3o existe e eh esse valor</span></span>\n<span id=\"cb2-80\"><a href=\"#cb2-80\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">bool</span> is_value<span class=\"op\">(</span>Pos pos<span class=\"op\">,</span> T value<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-81\"><a href=\"#cb2-81\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> inside<span class=\"op\">(</span>pos<span class=\"op\">)</span> <span class=\"op\">&amp;&amp;</span> at<span class=\"op\">(</span>pos<span class=\"op\">)</span> <span class=\"op\">==</span> value<span class=\"op\">;</span></span>\n<span id=\"cb2-82\"><a href=\"#cb2-82\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-83\"><a href=\"#cb2-83\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-84\"><a href=\"#cb2-84\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">//retorna string com valores separados por espa\u00e7o</span></span>\n<span id=\"cb2-85\"><a href=\"#cb2-85\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">std::</span>string<span class=\"op\"> </span>str<span class=\"op\">()</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-86\"><a href=\"#cb2-86\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">std::</span>stringstream<span class=\"op\"> </span>ss<span class=\"op\">;</span></span>\n<span id=\"cb2-87\"><a href=\"#cb2-87\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">for</span> <span class=\"op\">(</span><span class=\"dt\">int</span> l <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> l <span class=\"op\">&lt;</span> nl<span class=\"op\">;</span> l<span class=\"op\">++)</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-88\"><a href=\"#cb2-88\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">for</span> <span class=\"op\">(</span><span class=\"dt\">int</span> c <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> c <span class=\"op\">&lt;</span> nc<span class=\"op\">;</span> c<span class=\"op\">++)</span></span>\n<span id=\"cb2-89\"><a href=\"#cb2-89\" aria-hidden=\"true\" tabindex=\"-1\"></a>                ss <span class=\"op\">&lt;&lt;</span> <span class=\"op\">(</span>c <span class=\"op\">==</span> <span class=\"dv\">0</span> <span class=\"op\">?</span> <span class=\"st\">&quot;&quot;</span> <span class=\"op\">:</span> <span class=\"st\">&quot; &quot;</span><span class=\"op\">)</span> <span class=\"op\">&lt;&lt;</span> data<span class=\"op\">[</span>l<span class=\"op\">][</span>c<span class=\"op\">];</span></span>\n<span id=\"cb2-90\"><a href=\"#cb2-90\" aria-hidden=\"true\" tabindex=\"-1\"></a>            ss <span class=\"op\">&lt;&lt;</span> <span class=\"ch\">&#39;</span><span class=\"sc\">\\n</span><span class=\"ch\">&#39;</span><span class=\"op\">;</span></span>\n<span id=\"cb2-91\"><a href=\"#cb2-91\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"op\">}</span></span>\n<span id=\"cb2-92\"><a href=\"#cb2-92\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> ss<span class=\"op\">.</span>str<span class=\"op\">();</span></span>\n<span id=\"cb2-93\"><a href=\"#cb2-93\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-94\"><a href=\"#cb2-94\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">};</span></span>\n<span id=\"cb2-95\"><a href=\"#cb2-95\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//!+0</span></span>\n<span id=\"cb2-96\"><a href=\"#cb2-96\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-97\"><a href=\"#cb2-97\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//faz uma especializa\u00e7\u00e3o para imprimir matrix de char</span></span>\n<span id=\"cb2-98\"><a href=\"#cb2-98\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//sem espa\u00e7os entre os elementos</span></span>\n<span id=\"cb2-99\"><a href=\"#cb2-99\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">template</span> <span class=\"op\">&lt;&gt;</span></span>\n<span id=\"cb2-100\"><a href=\"#cb2-100\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">std::</span>string<span class=\"op\"> </span>matrix<span class=\"op\">&lt;</span><span class=\"dt\">char</span><span class=\"op\">&gt;::</span>str<span class=\"op\">()</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-101\"><a href=\"#cb2-101\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">std::</span>stringstream<span class=\"op\"> </span>ss<span class=\"op\">;</span></span>\n<span id=\"cb2-102\"><a href=\"#cb2-102\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">for</span> <span class=\"op\">(</span><span class=\"dt\">int</span> l <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> l <span class=\"op\">&lt;</span> nl<span class=\"op\">;</span> l<span class=\"op\">++)</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-103\"><a href=\"#cb2-103\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">for</span> <span class=\"op\">(</span><span class=\"dt\">int</span> c <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span> c <span class=\"op\">&lt;</span> nc<span class=\"op\">;</span> c<span class=\"op\">++)</span></span>\n<span id=\"cb2-104\"><a href=\"#cb2-104\" aria-hidden=\"true\" tabindex=\"-1\"></a>            ss <span class=\"op\">&lt;&lt;</span> data<span class=\"op\">[</span>l<span class=\"op\">][</span>c<span class=\"op\">];</span> </span>\n<span id=\"cb2-105\"><a href=\"#cb2-105\" aria-hidden=\"true\" tabindex=\"-1\"></a>        ss <span class=\"op\">&lt;&lt;</span> <span class=\"ch\">&#39;</span><span class=\"sc\">\\n</span><span class=\"ch\">&#39;</span><span class=\"op\">;</span></span>\n<span id=\"cb2-106\"><a href=\"#cb2-106\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-107\"><a href=\"#cb2-107\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> ss<span class=\"op\">.</span>str<span class=\"op\">();</span></span>\n<span id=\"cb2-108\"><a href=\"#cb2-108\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span>\n<span id=\"cb2-109\"><a href=\"#cb2-109\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//!=</span></span>\n<span id=\"cb2-110\"><a href=\"#cb2-110\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-111\"><a href=\"#cb2-111\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">template</span> <span class=\"op\">&lt;</span><span class=\"kw\">class</span> T<span class=\"op\">&gt;</span></span>\n<span id=\"cb2-112\"><a href=\"#cb2-112\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">std::</span>ostream<span class=\"op\">&amp;</span> <span class=\"kw\">operator</span><span class=\"op\">&lt;&lt;(</span><span class=\"bu\">std::</span>ostream<span class=\"op\">&amp;</span> os<span class=\"op\">,</span> matrix<span class=\"op\">&lt;</span>T<span class=\"op\">&gt;&amp;</span> m<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-113\"><a href=\"#cb2-113\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> os <span class=\"op\">&lt;&lt;</span> m<span class=\"op\">.</span>str<span class=\"op\">();</span></span>\n<span id=\"cb2-114\"><a href=\"#cb2-114\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<!--ADD_END-->\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> None%\ntestes na main\n========\n@case matriz de inteiros: 1 \n@case matriz de char: 1 \n@case inicializa\u00e7\u00e3o: \n@case acesso: 1 \n@case check: 1 1 1 \nacertos: 6/6\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [
        {
            "name": "mat.h",
            "contents": "#include <iostream>\n#include <sstream>\n#include <vector>\nstruct Pos {\n    int l, c;\n    Pos(int l, int c) { ... } \n    bool operator==(Pos pos) { ... }\n    bool operator!=(Pos pos) { ... }\n    std::string str() { ... }\n};\n//consigo imprimir a matriz diretamente atrav\u00e9s do m\u00e9todo str\nstd::ostream &operator<<(std::ostream &os, Pos pos) {\n    return os << pos.str();\n}\n\ntemplate <class T>\nclass matrix {\n    int nl{0}, nc{0};\n    std::vector<std::vector<T>> data;\n\npublic:\n    // construtor com todos os valores default nulos\n    matrix(int nl, int nc) { ... } \n\n    // construtor passando o valor default de cada elemento\n    matrix(int nl, int nc, T def) { ... } \n\n    matrix(std::vector<std::vector<T>> init) { ... } \n    //return number of lines\n    int lines() {\n        return nl;\n    }\n\n    //return number of columns\n    int cols() {\n        return nc;\n    }\n    // retorna elemento se passar posic\u00e3o\n    T& at(Pos pos) { ... }\n\n    // retorna elemento se passar posic\u00e3o\n    T& operator[](Pos pos) { ... }\n\n    // retorna linha\n    std::vector<T> &operator[](int l) { ... }\n\n    // retorna se posi\u00e7\u00e3o est\u00e1 dentro da matrix\n    bool inside(Pos pos) { ... }\n\n    // retorna se essa posi\u00e7\u00e3o existe e eh esse valor\n    bool is_value(Pos pos, T value) { ... }\n\n    //retorna string com valores separados por espa\u00e7o\n    std::string str() { ... }\n};\n\n//faz uma especializa\u00e7\u00e3o para imprimir matrix de char\n//sem espa\u00e7os entre os elementos\ntemplate <>\nstd::string matrix<char>::str() { ... }\n\ntemplate <class T>\nstd::ostream& operator<<(std::ostream& os, matrix<T>& m) {\n    return os << m.str();\n}\n\n",
            "encoding": 0
        }
    ]
}
