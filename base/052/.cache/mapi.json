{
    "title": "@052 L2 - {robot} erase all",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@052 L2 - {robot} erase all</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    ul.task-list{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n  </style>\n  <link rel=\"stylesheet\" href=\"/tmp/tmpg1d2p0d_.css\" />\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"l2---robot-erase-all\"><span class=\"citation\"\ndata-cites=\"052\">@052</span> L2 - {robot} erase all</h2>\n<p><img\nsrc=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/052/cover.jpg\" /></p>\n<p>Com a proximidade da Copa do Mundo, o fluxo de pessoas nas filas para\ncompra de ingressos aumentou consideravelmente. Como as filas est\u00e3o cada\nvez maiores, pessoas menos pacientes tendem a desistir da compra de\ningressos e acabam deixando as filas, liberando assim vaga para outras\npessoas. Quando uma pessoa deixa a fila, todas as pessoas que estavam\natr\u00e1s dela d\u00e3o um passo a frente, sendo assim nunca existe um espa\u00e7o\nvago entre duas pessoas. A fila inicialmente cont\u00e9m N pessoas, cada uma\ncom um identificador diferente.</p>\n<p>Jo\u00e3ozinho sabe o estado inicial dela e os identificadores em ordem\ndas pessoas que deixaram a fila. Sabendo que ap\u00f3s o estado inicial\nnenhuma pessoa entrou mais na fila, Jo\u00e3ozinho deseja saber o estado\nfinal da fila.</p>\n<p><strong>Entrada</strong></p>\n<ul>\n<li>A primeira linha cont\u00e9m um inteiro <strong>N</strong> representando\na quantidade de pessoas inicialmente na fila.</li>\n<li>A segunda linha cont\u00e9m <strong>N</strong> inteiros representando os\nidentificadores das pessoas na fila. O primeiro identificador\ncorresponde ao identificador da primeira pessoa na fila. \u00c9 garantido que\nduas pessoas diferentes n\u00e3o possuem o mesmo identificador.</li>\n<li>A terceira linha cont\u00e9m um inteiro <strong>M</strong> representando\na quantidade de pessoas que deixaram a fila.</li>\n<li>A quarta linha cont\u00e9m M inteiros representando os identificadores\ndas pessoas que deixaram a fila, na ordem em que elas sa\u00edram. \u00c9\ngarantido que um mesmo identificador n\u00e3o aparece duas vezes nessa\nlista.</li>\n</ul>\n<p><strong>Sa\u00edda</strong></p>\n<p>Seu programa deve imprimir uma linha contedo <strong>N-M</strong>\ninteiros com os identificadores das pessoas que permaneceram na fila, em\nordem de chegada.</p>\n<h3 id=\"entrada-de-amostra\">Entrada de amostra</h3>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\n4\n10 9 6 3\n1\n3\n========\n10 9 6 \n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 02\n8\n5 100 9 81 70 33 2 1000\n3\n9 33 5\n========\n100 81 70 2 1000 \n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> 01\n4\n10 9 6 3\n1\n3\n========\n10 9 6 \n<<<<<<<<\n\n>>>>>>>> 02\n8\n5 100 9 81 70 33 2 1000\n3\n9 33 5\n========\n100 81 70 2 1000 \n<<<<<<<<\n\n>>>>>>>> 01\n10\n817 364 524 565 132 499 412 563 297 638 \n7\n364 817 412 132 499 524 297 \n========\n565 563 638 \n<<<<<<<<\n\n>>>>>>>> 02\n9\n2 840 316 408 711 537 296 565 735 \n5\n316 565 408 735 2 \n========\n840 711 537 296 \n<<<<<<<<\n\n>>>>>>>> 03\n7\n831 565 110 581 726 770 990 \n3\n770 581 565 \n========\n831 110 726 990 \n<<<<<<<<\n\n>>>>>>>> 04\n3\n11 74 816 \n1\n74 \n========\n11 816 \n<<<<<<<<\n\n>>>>>>>> 05\n8\n992 854 103 984 485 949 283 672 \n5\n283 103 485 984 949 \n========\n992 854 672 \n<<<<<<<<\n\n>>>>>>>> 06\n6\n867 123 560 217 606 175 \n1\n606 \n========\n867 123 560 217 175 \n<<<<<<<<\n\n>>>>>>>> 07\n5\n436 984 930 101 946 \n1\n101 \n========\n436 984 930 946 \n<<<<<<<<\n\n>>>>>>>> 08\n10\n186 739 126 213 75 174 447 658 856 365 \n7\n856 174 186 447 75 658 126 \n========\n739 213 365 \n<<<<<<<<\n\n>>>>>>>> 09\n3\n229 402 828 \n1\n828 \n========\n229 402 \n<<<<<<<<\n\n>>>>>>>> 10\n9\n652 47 136 650 578 622 923 281 100 \n6\n652 578 923 100 47 100 \n========\n136 650 622 281 \n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": []
}
